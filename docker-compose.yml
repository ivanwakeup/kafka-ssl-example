---
version: '3.1'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    hostname: kafka
    volumes:
      - ./stores:/etc/
    links:
      - zookeeper
    ports:
      - 9093:9093
      - 9092:9092
    environment:
      KAFKA_SSL_TRUSTSTORE_LOCATION: etc/kafka.server.truststore.jks
      KAFKA_SSL_KEYSTORE_LOCATION: etc/kafka.server.keystore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 111111
      KAFKA_SSL_KEYSTORE_PASSWORD: 111111
      KAFKA_SSL_KEY_PASSWORD: 111111
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092, SSL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, SSL://kafka:9093
      #setting this parameter seems to cause issues with schema registry being able to resolve brokers. schema-registry works just fine if this remains the default PLAINTEXT
      #KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 30000
      #don't require domain name authentication in SSL for example
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: 
      #KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      #KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      #KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka_server_jaas.conf
      #KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.0.0
    hostname: schema-registry
    links:
       - zookeeper
       - kafka
    depends_on:
       - zookeeper
       - kafka
    ports:
       - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
